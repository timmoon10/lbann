trainer {
  mini_batch_size: 64

  ###################################################
  # Callbacks
  ###################################################
  callback {
    checkpoint {
      checkpoint_dir: "ckpt"
      ckpt_dist_epochs: 1
      ckpt_dist_steps: 845
      per_rank_dir: "."
    }
  }
}
model {
  data_layout: "data_parallel"
  num_epochs: 20
  disable_cuda: true
  ###################################################
  # Objective function
  ###################################################

  objective_function {
    layer_term { layer: "cross_entropy" }
    l2_weight_regularization {
      scale_factor: 1e-4
    }
  }

  ###################################################
  # Metrics
  ###################################################

  metric {
    layer_metric {
      name: "categorical accuracy"
      layer: "accuracy"
      unit: "%"
    }
  }

  ###################################################
  # Callbacks
  ###################################################

  summarizer {
    dir: "."
  }

  callback { print {} }
  callback { timer {} }
  callback {
    summary {
      mat_interval: 25
    }
  }

  callback {
    adaptive_learning_rate {
      patience: 4
      amt: 0.1
    }
  }
  callback {
    imcomm {
      intertrainer_comm_method: "normal"
      all_optimizers: true
    }
  }


  ###################################################
  # Layers
  ###################################################

  layer {
    name: "data"
    children: "image label"
    data_layout: "data_parallel"
    input {}
  }
  layer {
    parents: "data"
    name: "image"
    data_layout: "data_parallel"
    split {}
  }
  layer {
    parents: "data"
    name: "label"
    data_layout: "data_parallel"
    split {}
  }

  layer {
    parents: "image"
    name: "conv1"
    data_layout: "data_parallel"
    convolution {
      num_dims: 2
      num_output_channels: 20
      conv_dims_i: 5
      conv_pads_i: 0
      conv_strides_i: 1
      has_bias: true
    }
  }

  layer {
    parents: "conv1"
    name: "pool1"
    data_layout: "data_parallel"
    pooling {
      num_dims: 2
      pool_dims_i: 2
      pool_pads_i: 0
      pool_strides_i: 2
      pool_mode: "max"
    }
  }

  layer {
    parents: "pool1"
    name: "conv2"
    data_layout: "data_parallel"
    convolution {
      num_dims: 2
      num_output_channels: 50
      conv_dims_i: 5
      conv_pads_i: 0
      conv_strides_i: 1
      has_bias: true
    }
  }

  layer {
    parents: "conv2"
    name: "pool2"
    data_layout: "data_parallel"
    pooling {
      num_dims: 2
      pool_dims_i: 2
      pool_pads_i: 0
      pool_strides_i: 2
      pool_mode: "max"
    }
  }

  layer {
    parents: "pool2"
    name: "ip1"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 500
      has_bias: true
    }
  }

  layer {
    parents: "ip1"
    name: "relu1"
    data_layout: "model_parallel"
    relu {}
  }

  layer {
    parents: "relu1"
    name: "ip2"
    data_layout: "model_parallel"
    fully_connected {
      num_neurons: 10
      has_bias: true
    }
  }

  layer {
    parents: "ip2"
    name: "prob"
    data_layout: "data_parallel"
    softmax {}
  }

  layer {
    parents: "prob label"
    name: "cross_entropy"
    data_layout: "data_parallel"
    cross_entropy {}
  }

  layer {
    parents: "prob label"
    name: "accuracy"
    data_layout: "data_parallel"
    categorical_accuracy {}
  }

}
